I"Æ<h2 id="a-visual-introduction-to-ruby-frameworks">A visual introduction to Ruby frameworks</h2>

<p>As we begin moving away from the terminal and into full-fledged web development, we start to examine and work within some Ruby frameworks. First, we touched on Sinatra. 
<img src="https://images.unsplash.com/photo-1514888286974-6c03e2ca1dba?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=2827&amp;q=80" alt="a regular cat" />
Sinatra is a regular cat - not too smart, not too dumb, knows how to do some stuff, but youâ€™re gonna have to teach it to do most anything useful. I like regular cats. Theyâ€™re great to play with, and can even provide all sorts of teachable moments! As a first petâ€¦i mean framework, Sinatra/regular cat is a solid jumping off point.</p>
<h3 id="then-theres-rails">Then thereâ€™s Rails</h3>
<p><img src="https://images.unsplash.com/photo-1471123327422-e370dc57a3da?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" alt="a big lion" />
Rails is a lion - big, powerful, intimidating, and definitely not a candidate for your first pet. But, as we maybe (kind of?) learned from the Netflix series Tiger King, those that can harness the power of big cats can accomplish truly great (?) things. Github itself was built on a Rails backend! The first time you run <code>rails new Project</code> in your console and a few hundred files, folders, dependencies, and sub-libraries are generated in a flash is truly an awe-inspiring experience. Learning to navigate the file structures that rails builds for you, and slowly incorporating the various helper methods that rails provide is immensley gratifying. Heck, the first time I ran <code>rails g scaffold Student name age:integer....</code> and watched as it created all the requisite MVC files, classes, db migration, and so on that I had previously spent <em>hours</em> learning to build out in a basic Sinatra app, I really began to understand all this talk of <strong>rails magic</strong>.</p>

<p>But ultimate, rails is an undertaking. Itâ€™s extensive, layered, and has taken (me at least) hours upon hours of trial and error, googling, and headshaking to make progress in. I can imagine a scenario where I have an idea for a simple app, but maybe donâ€™t want to do all the legwork involved with getting a rails project off the ground.</p>
<h3 id="enter-camping">Enter Camping</h3>
<p><img src="https://images.unsplash.com/photo-1542736143-29a8432162bc?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=3150&amp;q=80" alt="kitten" />
Camping is a ruby micro-framework created by, as far as I can tell, a few weirdos who have more or less removed their presence from the internet. Camping is tiny - the entire framework source code is less than <strong>4 kb</strong>. Whatâ€™s more, Campingâ€™s core ethos is that your entire app can/should be contained in a single ruby document. Your MVC all exist simultaneously in one place. While youâ€™re free to build out other pages and <code>require_relative</code> them, Camping excels at being an agile launch pad for ideas.</p>

<p>With the camping gem installed (itâ€™s recommended you install the camping omnibus, as it includes markaby - more on that in a bit), All you need to do to get rolling is drop <code>Camping.goes :AppName</code> at the top of your ruby document. Running <code>$ camping appname.rb</code> in console will fire up a live server, and your project is up and running!</p>
:ET